# Generated by Django 4.2.7 on 2025-09-25 14:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('orders', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Template name', max_length=100)),
                ('notification_type', models.CharField(choices=[('order_confirmation', 'Order Confirmation'), ('order_shipped', 'Order Shipped'), ('order_delivered', 'Order Delivered'), ('order_cancelled', 'Order Cancelled'), ('low_stock_alert', 'Low Stock Alert'), ('welcome', 'Welcome Message')], help_text='Type of notification', max_length=50)),
                ('channel', models.CharField(choices=[('sms', 'SMS'), ('email', 'Email')], help_text='Notification channel', max_length=10)),
                ('subject', models.CharField(blank=True, help_text='Email subject (not used for SMS)', max_length=200)),
                ('message', models.TextField(help_text='Message template with placeholders')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this template is active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Notification Template',
                'verbose_name_plural': 'Notification Templates',
                'db_table': 'notification_templates',
                'unique_together': {('notification_type', 'channel')},
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel', models.CharField(choices=[('sms', 'SMS'), ('email', 'Email')], help_text='Notification channel', max_length=10)),
                ('notification_type', models.CharField(help_text='Type of notification', max_length=50)),
                ('subject', models.CharField(blank=True, help_text='Email subject', max_length=200)),
                ('message', models.TextField(help_text='Notification message')),
                ('recipient_address', models.CharField(help_text='Email address or phone number', max_length=255)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('failed', 'Failed'), ('delivered', 'Delivered')], default='pending', help_text='Notification status', max_length=20)),
                ('external_id', models.CharField(blank=True, help_text='External service message ID', max_length=100)),
                ('error_message', models.TextField(blank=True, help_text='Error message if delivery failed')),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('order', models.ForeignKey(blank=True, help_text='Related order (if applicable)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='orders.order')),
                ('recipient', models.ForeignKey(help_text='Notification recipient', on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'db_table': 'notifications',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['recipient', 'status'], name='notificatio_recipie_218e2a_idx'), models.Index(fields=['channel', 'status'], name='notificatio_channel_411e8e_idx'), models.Index(fields=['created_at'], name='notificatio_created_e4c995_idx')],
            },
        ),
    ]
